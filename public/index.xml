<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on A minimal Hugo website</title>
    <link>http://localhost:4321/</link>
    <description>Recent content in Home on A minimal Hugo website</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:4321/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Election Blog One</title>
      <link>http://localhost:4321/post/2024/09/09/election-blog-one/</link>
      <pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/post/2024/09/09/election-blog-one/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;# Load libraries.&#xA;## install via `install.packages(&amp;quot;name&amp;quot;)`&#xA;library(ggplot2)&#xA;library(ggthemes)&#xA;library(maps)&#xA;library(tidyverse)&#xA;&#xA;## set working directory here&#xA;# setwd(&amp;quot;~&amp;quot;)&#xA;&#xA;####----------------------------------------------------------#&#xA;#### Read and clean presidential popular vote.&#xA;####----------------------------------------------------------#&#xA;&#xA;# Read presidential popular vote. &#xA;d_popvote &amp;lt;- read_csv(&amp;quot;popvote_1948-2020.csv&amp;quot;)&#xA;&#xA;&#xA;# Subset data to most recent past election year. &#xA;d_popvote |&amp;gt; colnames()&#xA;d_popvote |&amp;gt; &#xA;  filter(year == 2020) |&amp;gt; &#xA;  select(party, candidate, pv2p)&#xA;&#xA;# Pivot data to wide format with party names as columns and two-party vote share as values.&#xA;(d_popvote_wide &amp;lt;- d_popvote |&amp;gt;&#xA;    select(year, party, pv2p) |&amp;gt;&#xA;    pivot_wider(names_from = party, values_from = pv2p))&#xA;&#xA;# Modify winner column to show &amp;quot;D&amp;quot; if Democrats win and &amp;quot;R&amp;quot; if Republicans win. &#xA;(d_popvote_wide &amp;lt;- d_popvote_wide |&amp;gt; &#xA;    mutate(winner = case_when(democrat &amp;gt; republican ~ &amp;quot;D&amp;quot;,&#xA;                              TRUE ~ &amp;quot;R&amp;quot;)))&#xA;&#xA;# Summarize data with respect to winners. &#xA;d_popvote_wide |&amp;gt; &#xA;  group_by(winner) |&amp;gt;&#xA;  summarise(races = n())&#xA;&#xA;&#xA;####----------------------------------------------------------#&#xA;#### Visualize trends in national presidential popular vote. &#xA;####----------------------------------------------------------#&#xA;&#xA;# Visualize the two-party presidential popular over time. &#xA;d_popvote |&amp;gt; &#xA;  ggplot(aes(x = year, y = pv2p, color = party)) + &#xA;  geom_line() + &#xA;  scale_color_manual(values = c(&amp;quot;dodgerblue4&amp;quot;, &amp;quot;firebrick1&amp;quot;)) + &#xA;  theme_stata()&#xA;&#xA;my_custom_theme &amp;lt;- theme_bw() + &#xA;  theme(panel.border = element_blank(),&#xA;        plot.title = element_text(size = 15, hjust = 0.5), &#xA;        axis.text.x = element_text(angle = 45, hjust = 1),&#xA;        axis.text = element_text(size = 12),&#xA;        strip.text = element_text(size = 18),&#xA;        axis.line = element_line(colour = &amp;quot;black&amp;quot;),&#xA;        legend.position = &amp;quot;top&amp;quot;,&#xA;        legend.text = element_text(size = 12))&#xA;&#xA;d_popvote |&amp;gt; &#xA;  ggplot(aes(x = year, y = pv2p, color = party)) + &#xA;  geom_line() + &#xA;  scale_color_manual(values = c(&amp;quot;dodgerblue4&amp;quot;, &amp;quot;firebrick1&amp;quot;)) + &#xA;  my_custom_theme&#xA;&#xA;####----------------------------------------------------------#&#xA;#### State-by-state map of presidential popular votes.&#xA;####----------------------------------------------------------#&#xA;&#xA;# Sequester shapefile of states from `maps` library.&#xA;states_map &amp;lt;- map_data(&amp;quot;state&amp;quot;)&#xA;&#xA;# Read wide version of dataset that can be used to compare candidate votes with one another. &#xA;d_pvstate_wide &amp;lt;- read_csv(&amp;quot;clean_wide_state_2pv_1948_2020.csv&amp;quot;)&#xA;&#xA;d_pvstate_wide&#xA;&#xA;# Merge d_pvstate_wide with state_map.&#xA;d_pvstate_wide$region &amp;lt;- tolower(d_pvstate_wide$state)&#xA;&#xA;pv_map &amp;lt;- d_pvstate_wide |&amp;gt;&#xA;  filter(year == 2020) |&amp;gt;&#xA;  left_join(states_map, by = &amp;quot;region&amp;quot;)&#xA;&#xA;pv_map&#xA;# Make map grid of state winners for each election year available in the dataset. &#xA;&#xA;pv_win_map &amp;lt;- d_pvstate_wide |&amp;gt; &#xA;  filter(year == 2020) |&amp;gt; &#xA;  left_join(states_map, by = &amp;quot;region&amp;quot;) |&amp;gt; &#xA;  mutate(winner = ifelse(R_pv &amp;gt; D_pv, &amp;quot;republican&amp;quot;, &amp;quot;democrat&amp;quot;))&#xA;&#xA;d_pvstate_wide&#xA;&#xA;pv_win_map |&amp;gt; &#xA;  ggplot(aes(long, lat, group = group)) + &#xA;  geom_polygon(aes(fill = winner), color = &amp;quot;black&amp;quot;) + &#xA;  scale_fill_manual(values = c(&amp;quot;dodgerblue4&amp;quot;, &amp;quot;firebrick1&amp;quot;))&#xA;&#xA;d_pvstate_wide |&amp;gt; &#xA;  filter(year &amp;gt;= 1980) |&amp;gt; &#xA;  left_join(states_map, by = &amp;quot;region&amp;quot;) |&amp;gt; &#xA;  mutate(winner = ifelse(R_pv &amp;gt; D_pv, &amp;quot;republican&amp;quot;, &amp;quot;democrat&amp;quot;)) |&amp;gt; &#xA;  ggplot(aes(long, lat, group = group)) + &#xA;  facet_wrap(facets = year ~.) + &#xA;  geom_polygon(aes(fill = winner), color = &amp;quot;white&amp;quot;) + &#xA;  scale_fill_manual(values = c(&amp;quot;dodgerblue4&amp;quot;, &amp;quot;firebrick1&amp;quot;)) + &#xA;  theme_void() + &#xA;  ggtitle(&amp;quot;Presidential Vote Share by State (1980-2020)&amp;quot;) + &#xA;  theme(strip.text = element_text(size = 12), &#xA;        aspect.ratio = 1)&#xA;&#xA;####----------------------------------------------------------#&#xA;#### Forecast: simplified electoral cycle model. &#xA;####----------------------------------------------------------#&#xA;&#xA;# Create prediction (pv2p and margin) based on simplified electoral cycle model: &#xA;# vote_2024 = 3/4*vote_2020 + 1/4*vote_2016 (lag1, lag2, respectively). &#xA;d_pvstate_wide |&amp;gt; colnames()&#xA;&#xA;pv2p_2024_states &amp;lt;- d_pvstate_wide |&amp;gt; &#xA;  filter(year == 2020) |&amp;gt; &#xA;  group_by(state) |&amp;gt; &#xA;  summarize(D_pv2p_2024 = 0.75*D_pv2p + 0.25*D_pv2p_lag1, &#xA;            R_pv2p_2024 = 0.75*R_pv2p + 0.25*R_pv2p_lag1) |&amp;gt; &#xA;  mutate(pv2p_2024_margin = R_pv2p_2024 - D_pv2p_2024, &#xA;         region = tolower(state))&#xA;&#xA;pv2p_2024_states |&amp;gt; &#xA;  left_join(states_map, by = &amp;quot;region&amp;quot;) |&amp;gt; &#xA;  ggplot(aes(long, lat, group = group)) + &#xA;  geom_polygon(aes(fill = pv2p_2024_margin), color = &amp;quot;black&amp;quot;) + &#xA;  scale_fill_gradient2(high = &amp;quot;firebrick1&amp;quot;, &#xA;                       mid = &amp;quot;white&amp;quot;, &#xA;                       low = &amp;quot;dodgerblue4&amp;quot;, &#xA;                       breaks = c(-50, -25, 0, 25, 50), &#xA;                       limits = c(-50, 50)) + &#xA;  theme_void()&#xA;&#xA;ec &amp;lt;- read_csv(&amp;quot;ec_full.csv&amp;quot;)&#xA;&#xA;pv2p_2024_states &amp;lt;- pv2p_2024_states |&amp;gt; &#xA;  mutate(year = 2024, &#xA;         winner = ifelse(R_pv2p_2024 &amp;gt; D_pv2p_2024, &amp;quot;R&amp;quot;, &amp;quot;D&amp;quot;)) |&amp;gt; &#xA;  left_join(ec, by = c(&amp;quot;state&amp;quot;, &amp;quot;year&amp;quot;))&#xA;&#xA;pv2p_2024_states |&amp;gt; &#xA;  group_by(winner) |&amp;gt; &#xA;  summarize(electoral_votes = sum(electors))&#xA;&#xA;pv2p_2024_states&#xA;&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Hello R Markdown</title>
      <link>http://localhost:4321/post/2020/12/01/hello-r-markdown/</link>
      <pubDate>Tue, 01 Dec 2020 21:13:14 -0500</pubDate>
      <guid>http://localhost:4321/post/2020/12/01/hello-r-markdown/</guid>
      <description>&lt;h1 id=&#34;r-markdown&#34;&gt;R Markdown&lt;/h1&gt;&#xA;&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(cars)&#xA;##      speed           dist       &#xA;##  Min.   : 4.0   Min.   :  2.00  &#xA;##  1st Qu.:12.0   1st Qu.: 26.00  &#xA;##  Median :15.0   Median : 36.00  &#xA;##  Mean   :15.4   Mean   : 42.98  &#xA;##  3rd Qu.:19.0   3rd Qu.: 56.00  &#xA;##  Max.   :25.0   Max.   :120.00&#xA;fit &amp;lt;- lm(dist ~ speed, data = cars)&#xA;fit&#xA;## &#xA;## Call:&#xA;## lm(formula = dist ~ speed, data = cars)&#xA;## &#xA;## Coefficients:&#xA;## (Intercept)        speed  &#xA;##     -17.579        3.932&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Another Note on A blogdown Tutorial</title>
      <link>http://localhost:4321/note/2017/06/14/another-note/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/note/2017/06/14/another-note/</guid>
      <description>&lt;p&gt;I just discovered &lt;a href=&#34;https://www.apreshill.com/blog/2020-12-new-year-new-blogdown/&#34;&gt;an awesome tutorial&lt;/a&gt; on &lt;strong&gt;blogdown&lt;/strong&gt; written by Alison. I have to admit this is &lt;em&gt;the&lt;/em&gt; best &lt;strong&gt;blogdown&lt;/strong&gt; tutorial I have seen so far.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.apreshill.com/blog/2020-12-new-year-new-blogdown/03-blogdown-2021.png&#34; alt=&#34;Alison&amp;rsquo;s blogdown tutorial&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Quick Note on Two Beautiful Websites</title>
      <link>http://localhost:4321/note/2017/06/13/a-quick-note/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/note/2017/06/13/a-quick-note/</guid>
      <description>&lt;p&gt;To me, the two most impressive websites based on &lt;strong&gt;blogdown&lt;/strong&gt; are:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://robjhyndman.com&#34;&gt;Rob J Hyndman&lt;/a&gt;&amp;rsquo;s personal website.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://livefreeordichotomize.com&#34;&gt;Live Free or Dichotomize&lt;/a&gt; by Lucy and Nick &lt;em&gt;et al&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;I&amp;rsquo;m sure there will be more.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Plain Markdown Post</title>
      <link>http://localhost:4321/post/2016/02/14/a-plain-markdown-post/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/post/2016/02/14/a-plain-markdown-post/</guid>
      <description>&lt;p&gt;This sample post is mainly for&#xA;&lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;&lt;strong&gt;blogdown&lt;/strong&gt;&lt;/a&gt; users. If you do not use&#xA;&lt;strong&gt;blogdown&lt;/strong&gt;, you can skip the first section.&lt;/p&gt;&#xA;&lt;h1 id=&#34;1-markdown-or-r-markdown&#34;&gt;1. Markdown or R Markdown&lt;/h1&gt;&#xA;&lt;p&gt;This is a post written in plain Markdown (&lt;code&gt;*.md&lt;/code&gt;) instead of R Markdown&#xA;(&lt;code&gt;*.Rmd&lt;/code&gt;). The major differences are:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;You cannot run any R code in a plain Markdown document, whereas in an R&#xA;Markdown document, you can embed R code chunks (&lt;code&gt;```{r}&lt;/code&gt;);&lt;/li&gt;&#xA;&lt;li&gt;A plain Markdown post is rendered through&#xA;&lt;a href=&#34;https://gohugo.io/overview/configuration/&#34;&gt;Goldmark&lt;/a&gt; by default, and an R&#xA;Markdown document is compiled by&#xA;&lt;a href=&#34;http://rmarkdown.rstudio.com&#34;&gt;&lt;strong&gt;rmarkdown&lt;/strong&gt;&lt;/a&gt; and&#xA;&lt;a href=&#34;http://pandoc.org&#34;&gt;Pandoc&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;There are differences in syntax between Goldmark&amp;rsquo;s Markdown and Pandoc&amp;rsquo;s&#xA;Markdown. For example, Goldmark does not support LaTeX math and Pandoc does. I&#xA;have added the KaTeX support to this theme (i.e.,&#xA;&lt;a href=&#34;https://github.com/yihui/hugo-xmin&#34;&gt;hugo-xmin&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lorem Ipsum</title>
      <link>http://localhost:4321/post/2015/07/23/lorem-ipsum/</link>
      <pubDate>Thu, 23 Jul 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/post/2015/07/23/lorem-ipsum/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Lorem ipsum&lt;/strong&gt; dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore &lt;em&gt;magna aliqua&lt;/em&gt;. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;&#xA;&lt;p&gt;Quisque mattis volutpat lorem vitae feugiat. Praesent porta est quis porta imperdiet. Aenean porta, mi non cursus volutpat, mi est mollis libero, id suscipit orci urna a augue. In fringilla euismod lacus, vitae tristique massa ultricies vitae. Mauris accumsan ligula tristique, viverra nulla sed, porta sapien. Vestibulum facilisis nec nisl blandit convallis. Maecenas venenatis porta malesuada. Ut ac erat tortor. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nulla sodales quam sit amet tincidunt egestas. In et turpis at orci vestibulum ullamcorper. Aliquam sed ante libero. Sed hendrerit arcu lacus.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Hugo XMin</title>
      <link>http://localhost:4321/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/about/</guid>
      <description>&lt;p&gt;&lt;strong&gt;XMin&lt;/strong&gt; is the first Hugo theme I have designed. The original reason that I wrote it was I needed a minimal example of Hugo themes when I was writing the  &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;&lt;strong&gt;blogdown&lt;/strong&gt;&lt;/a&gt; book. Basically I wanted a simple theme that supports a navigation menu, a home page, other single pages, lists of pages, blog posts, categories, tags, and RSS. That is all. Nothing fancy. In terms of CSS and JavaScript, I really want to keep them minimal. In fact, this theme does not contain any JavaScript code at all, although on this example website I did introduce some JavaScript code (still relatively simple anyway). The theme does not contain any images, either, and is pretty much a plain-text theme.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
